@model MusicShop.Models.Album

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Album</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AlbumId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cover, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cover, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cover, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.DropDownListFor(Model => Model.Genre, ViewBag.listGenre as IEnumerable<SelectListItem>)*@
                <select name="Genre">
                    @foreach (var g in ViewBag.listGenre)
                    {
                        if ((ViewBag.selectedGenre.ToString()).Contains(g.Value))
                        {
                            <option value="@g.Value" selected="selected">@g.Text</option>
                        }
                        else
                        {
                            <option value="@g.Value" >@g.Text</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListArtist, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.ListBox("ListArtist", ViewBag.multi as MultiSelectList)
                </div>*@
            <div class="col-md-10">
                <select name="ListArtist" multiple>
                    @foreach (var c in ViewBag.listArtist)
                    {
                        if ((ViewBag.selectedArtist as List<int>).Contains(c.ArtistId))
                        {
                            <option value="@c.ArtistId" selected="selected">@c.ArtistName</option>
                        }
                        else
                        {
                            <option value="@c.ArtistId">@c.ArtistName</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ListMusic, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.ListBox("ListArtist", ViewBag.multi as MultiSelectList)
                </div>*@
            <div class="col-md-10">
                <select name="ListMusic" multiple>
                    @foreach (var c in ViewBag.listMusic)
                    {
                        if ((ViewBag.selectedMusic as List<int>).Contains(c.MusicId))
                        {
                            <option value="@c.MusicId" selected="selected">@c.Title</option>
                        }
                        else
                        {
                            <option value="@c.MusicId">@c.Title</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
